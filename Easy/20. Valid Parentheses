"""
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true
Example 2:

Input: "()[]{}"
Output: true
Example 3:

Input: "(]"
Output: false
Example 4:

Input: "([)]"
Output: false
Example 5:

Input: "{[]}"
Output: true
"""
#################################################################################################################################
class Solution:
    def isValid(self, s: str) -> bool:
        stack = []
        if s == "":
            return True
            
        stack.append(s[0])
        for i in range(1,len(s)):
            if s[i] == '(' or s[i] == '{' or s[i] == '[':
                stack.append(s[i])
            elif s[i] == ')' or s[i] == '}' or s[i] == ']':
                if s[i] == ')' and stack != [] and stack[-1] == '(':
                    del stack[-1]
                elif s[i] == '}' and stack != [] and stack[-1] == '{':
                    del stack[-1]
                elif s[i] == ']' and stack != [] and stack[-1] == '[':
                    del stack[-1]
                else:
                    return False
        if stack == []:
            return True
