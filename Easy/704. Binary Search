"""
Given a sorted (in ascending order) integer array nums of n elements and a target value, write a function to search target in nums. If target exists, then return its index, otherwise return -1.


Example 1:

Input: nums = [-1,0,3,5,9,12], target = 9
Output: 4
Explanation: 9 exists in nums and its index is 4

Example 2:

Input: nums = [-1,0,3,5,9,12], target = 2
Output: -1
Explanation: 2 does not exist in nums so return -1
"""
#################################################################################################################################
import sys
sys.setrecursionlimit(1500)
class Solution:
    def binary(self,nums,start,end,target):
        mid = start + (end - start)//2
        if start <= end:
            if target == nums[mid]:
                return mid
            elif target < nums[mid]:
                return self.binary(nums,start,mid-1,target)

            elif target > nums[mid]:
                return self.binary(nums,mid+1,end,target)
            
        else:
            return -1
    def search(self, nums: List[int], target: int) -> int:
        return self.binary(nums,0,len(nums)-1,target)
        
